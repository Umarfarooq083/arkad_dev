{"version":3,"sources":["components/Button.tsx","components/InputField.tsx","pages/users/AddUser/index.tsx"],"names":["Button","className","btnPrimary","btnOutline","btnRounded","disabled","children","handleClick","type","style","styleClass","classNames","styles","onClick","InputField","placeholder","onChange","error","errorClass","helpertext","onKeyDown","onKeyUp","value","name","min","max","maxLength","pattern","onKeyPress","onfocus","onblur","ref","inputDesign","inputStyle","onFocus","onBlur","AddUser","dispatch","useDispatch","history","useHistory","dropdownValues","useSelector","state","users","departments","map","data","id","label","desiginations","desigination","designation_name","RegisterSchema","Yup","shape","firstName","required","matches","lastName","userName","address","department","date","city","country","phone","email","password","confirmPassword","oneOf","formik","useFormik","initialValues","moment","Date","now","format","validationSchema","onSubmit","values","a","console","log","addUser","useEffect","getDropdownValues","href","push","autoComplete","handleSubmit","e","setFieldValue","target","touched","errors","classNamePrefix","options","isSearchable","marginBottom"],"mappings":"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","file":"static/js/10.fd6c11e3.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\nimport styles from \"./style.module.scss\";\r\nimport classNames from \"classnames\";\r\ninterface FuncProp {\r\n  className?: string;\r\n  btnPrimary?: boolean;\r\n  btnRounded?: boolean;\r\n  btnOutline?: boolean;\r\n  children?: React.ReactNode;\r\n  handleClick?: any;\r\n  disabled?: any;\r\n  type?: any;\r\n  style?:any;\r\n}\r\nconst Button: FC<FuncProp> = ({\r\n  className = \"\",\r\n  btnPrimary = false,\r\n  btnOutline = false,\r\n  btnRounded = false,\r\n  disabled = false,\r\n  children = \"\",\r\n  handleClick = () => {},\r\n  type = \"button\",\r\n  style\r\n}) => {\r\n  const styleClass = classNames(`${className}`, {\r\n    [styles.btnPrimary]: btnPrimary,\r\n    [styles.btnOutline]: btnOutline,\r\n    [styles.btnRounded]: btnRounded,\r\n  });\r\n  return (\r\n    <>\r\n      <button\r\n        type={type}\r\n        onClick={handleClick}\r\n        className={`${styleClass} ${className}`}\r\n        disabled={disabled}\r\n        style={style}\r\n      >\r\n        {children}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default Button;\r\n","import React, { FC } from 'react'\r\nimport styles from './style.module.scss'\r\n\r\ninterface FuncProp {\r\n\tclassName?: string\r\n\tplaceholder?: string\r\n\terror?: boolean\r\n\terrorClass?: string\r\n\thelpertext?: string\r\n\tvalue?: any\r\n\tonChange?: any\r\n\tonKeyDown?: any\r\n\tonKeyUp?: any\r\n\tname?: any\r\n\ttype?: string\r\n\tmin?: any\r\n\tmax?: any\r\n\tmaxLength?: any\r\n\tonKeyPress?: any\r\n\tstyle?: any\r\n\tpattern?: any\r\n\tonfocus?: any\r\n\tonblur?: any\r\n\tref?: any\r\n}\r\nconst InputField: FC<FuncProp> = ({\r\n\tplaceholder,\r\n\ttype,\r\n\tclassName,\r\n\terror,\r\n\terrorClass,\r\n\thelpertext,\r\n\tonChange,\r\n\tonKeyDown,\r\n\tonKeyUp,\r\n\tvalue,\r\n\tname,\r\n\tmin,\r\n\tstyle,\r\n\tmax,\r\n\tmaxLength,\r\n\tpattern,\r\n\tonKeyPress,\r\n\tonfocus,\r\n\tonblur,\r\n\tref,\r\n}) => {\r\n\treturn (\r\n\t\t<div className={`wrapDivMargin ${styles.inputDesign}`}>\r\n\t\t\t<input\r\n\t\t\t\ttype={type}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tclassName={`form-control ${styles.inputStyle} ${className}`}\r\n\t\t\t\tname={name}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tonKeyDown={onKeyDown}\r\n\t\t\t\tonKeyUp={onKeyUp}\r\n\t\t\t\tmin={min}\r\n\t\t\t\tmax={max}\r\n\t\t\t\tstyle={style}\r\n\t\t\t\tpattern={pattern}\r\n\t\t\t\tmaxLength={maxLength}\r\n\t\t\t\tonKeyPress={onKeyPress}\r\n\t\t\t\tonFocus={onfocus}\r\n\t\t\t\tonBlur={onblur}\r\n\t\t\t\tref={ref}\r\n\t\t\t/>\r\n\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default InputField\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { RiLockPasswordLine } from \"react-icons/ri\";\r\nimport { MdOutlineDateRange } from \"react-icons/md\";\r\nimport { BsTelephone } from \"react-icons/bs\";\r\nimport { HiOutlineMail } from \"react-icons/hi\";\r\nimport { FaRegUser } from \"react-icons/fa\";\r\nimport { FaRegAddressCard } from \"react-icons/fa\";\r\nimport { GiModernCity } from \"react-icons/gi\";\r\nimport { MdDownhillSkiing } from \"react-icons/md\";\r\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\r\nimport { MdOutlineStoreMallDirectory } from \"react-icons/md\";\r\nimport Button from \"components/Button\";\r\nimport InputField from \"components/InputField\";\r\nimport ReactSelect from \"react-select\";\r\nimport \"./style.scss\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { getDropdownValues, addUser } from \"../../../redux/users/actions\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddUser = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const dropdownValues = useSelector(\r\n    (state: any) => state.users.dropdownValues\r\n  );\r\n\r\n  const departments =\r\n    dropdownValues.departments &&\r\n    dropdownValues.departments.map((data, id) => {\r\n      const dataValue = { value: data.id, label: data.name };\r\n      return dataValue;\r\n    });\r\n\r\n  const desiginations =\r\n    dropdownValues.desigination &&\r\n    dropdownValues.desigination.map((data, id) => {\r\n      const dataValue = { value: data.id, label: data.designation_name };\r\n      return dataValue;\r\n    });\r\n\r\n  const RegisterSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .required(\"First name is required!\")\r\n      .max(16, \"First name should not exceed 16 characters\")\r\n      .required(\"First name is required\")\r\n      .matches(/^[aA-zZ]+$/, \"Invalid First name\"),\r\n    lastName: Yup.string()\r\n      .required(\"Last name is required!\")\r\n      .max(16, \"Last name should not exceed 16 characters\")\r\n      .required(\"Last name is required\")\r\n      .matches(/^[aA-zZ]+$/, \"Invalid Last name\"),\r\n    userName: Yup.string()\r\n      .required(\"User name is required\")\r\n      .matches(/^[^\\s]+(\\s+[^\\s]+)*$/, \"Invalid User name\")\r\n      .max(16, \"User name should not exceed 16 characters\"),\r\n    address: Yup.string()\r\n      .required(\"Address is required\")\r\n      .matches(/^[^\\s]+(\\s+[^\\s]+)*$/, \"Invalid Address\"),\r\n    desigination: Yup.mixed(),\r\n    department: Yup.mixed(),\r\n    date: Yup.mixed().required(\"Date is required\"),\r\n    city: Yup.string().matches(/^[^\\s]+(\\s+[^\\s]+)*$/, \"Invalid City\").required(\"City name is required\"),\r\n    country: Yup.string().matches(/^[^\\s]+(\\s+[^\\s]+)*$/, \"Invalid Country\").required(\"Country name is required\"),\r\n    phone: Yup.string()\r\n      .matches(\r\n        /^(?:(?:\\(?(?:00|\\+)([1-4]\\d\\d|[1-9]\\d?)\\)?)?[\\-\\.\\\\\\\\/]?)?((?:\\(?\\d{1,}\\)?[\\-\\.\\\\\\\\/]?){0,})(?:[\\-\\.\\\\\\\\/]?(?:#|ext\\.?|extension|x)[\\-\\.\\\\\\\\/]?(\\d+))?$/i,\r\n        \"Phone number should be numeric only!\"\r\n      )\r\n      .required(\"Phone number is required\")\r\n      .min(10, \"Phone number must be at least 10 characters\")\r\n      .max(17, \"Phone number must be at least 17 characters\"),\r\n\r\n    email: Yup.string()\r\n      .email(\"Email must be a valid email address\")\r\n      .required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .required(\"Password is required\")\r\n      .matches(\r\n        /^(?=(?:.*[A-Z].*){1})(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n        \"Must Contain 8 Characters,  One Uppercase, One Lowercase, One Number and one special case Character\"\r\n      ),\r\n    confirmPassword: Yup.string()\r\n      .required(\"Confirm Password is required\")\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      desigination: desiginations[0],\r\n      department: departments[0],\r\n      date: moment(Date.now()).format(\"YYYY-MM-DD\"),\r\n      address: \"\",\r\n      city: \"\",\r\n      country: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      userName: \"\",\r\n    },\r\n    validationSchema: RegisterSchema,\r\n    onSubmit: async (values) => {\r\n      console.log(\"values\", values);\r\n\r\n      await dispatch(\r\n        addUser({\r\n          firstName: values.firstName,\r\n          lastName: values.lastName,\r\n          userName: values.userName,\r\n          email: values.email,\r\n          password: values.password,\r\n          confirmPassword: values.confirmPassword,\r\n          desigination: values.desigination.value,\r\n          department: values.department.value,\r\n          date: values.date,\r\n          address: values.address,\r\n          city: values.city,\r\n          country: values.country,\r\n          phone:values.phone,\r\n         \r\n        })\r\n      );\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    dispatch(getDropdownValues());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mainForm\">\r\n        <div>\r\n          <a href=\"#\" className=\"crossIcon\">\r\n            <AiOutlineArrowLeft />\r\n            <span\r\n              onClick={() => {\r\n                history.push(\"/admin/users-management\");\r\n              }}\r\n            >\r\n              Back\r\n            </span>\r\n          </a>\r\n        </div>\r\n        <div className=\"heading\">\r\n          <p className=\"headingOne\">Welcome</p>\r\n          <p className=\"headingText\">Please register to your account.</p>\r\n        </div>\r\n        <Form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs\">\r\n                <InputField\r\n                  name=\"firstname\"\r\n                  className=\"formInputs_inner\"\r\n                  placeholder=\"First Name\"\r\n                  type=\"text\"\r\n                  value={formik.values.firstName}\r\n                  onChange={(e: any) => {\r\n                    formik.setFieldValue(\"firstName\", e.target.value);\r\n                  }}\r\n                />\r\n                <i className=\"inputIcons\">\r\n                  <FaRegUser />\r\n                </i>\r\n              </div>\r\n              {formik.touched.firstName && formik.errors.firstName ? (\r\n                <div className=\"error\">{formik.errors.firstName}</div>\r\n              ) : null}\r\n            </div>\r\n           \r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs\">\r\n                <InputField\r\n                  name=\"lastName\"\r\n                  className=\"formInputs_inner\"\r\n                  placeholder=\"Last Name\"\r\n                  type=\"text\"\r\n                  value={formik.values.lastName}\r\n                  onChange={(e: any) => {\r\n                    formik.setFieldValue(\"lastName\", e.target.value);\r\n                  }}\r\n                />\r\n                <i className=\"inputIcons\">\r\n                  <FaRegUser />\r\n                </i>\r\n              </div>\r\n              {formik.touched.lastName && formik.errors.lastName ? (\r\n                <div className=\"error\">{formik.errors.lastName}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs\">\r\n                <InputField\r\n                  name=\"userName\"\r\n                  className=\"formInputs_inner\"\r\n                  placeholder=\"User Name\"\r\n                  type=\"text\"\r\n                  value={formik.values.userName}\r\n                  onChange={(e: any) => {\r\n                    formik.setFieldValue(\"userName\", e.target.value);\r\n                  }}\r\n                />\r\n                <i className=\"inputIcons\">\r\n                  <FaRegUser />\r\n                </i>\r\n              </div>\r\n              {formik.touched.userName && formik.errors.userName ? (\r\n                <div className=\"error\">{formik.errors.userName}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs\">\r\n                <InputField\r\n                  name=\"email\"\r\n                  className=\"formInputs_inner\"\r\n                  placeholder=\"Email\"\r\n                  type=\"text\"\r\n                  value={formik.values.email}\r\n                  onChange={(e: any) => {\r\n                    formik.setFieldValue(\"email\", e.target.value);\r\n                  }}\r\n                />\r\n                <i className=\"inputIcons\">\r\n                  <HiOutlineMail />\r\n                </i>\r\n              </div>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div className=\"error\">{formik.errors.email}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs\">\r\n                <InputField\r\n                  name=\"password\"\r\n                  className=\"formInputs_inner\"\r\n                  placeholder=\"Password\"\r\n                  type=\"text\"\r\n                  value={formik.values.password}\r\n                  onChange={(e: any) => {\r\n                    formik.setFieldValue(\"password\", e.target.value);\r\n                  }}\r\n                />\r\n                <i className=\"inputIcons\">\r\n                  <RiLockPasswordLine />\r\n                </i>\r\n              </div>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <div className=\"error\">{formik.errors.password}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs\">\r\n                <InputField\r\n                  name=\"confirmPassword\"\r\n                  className=\"formInputs_inner\"\r\n                  placeholder=\"Confirm Password\"\r\n                  type=\"text\"\r\n                  value={formik.values.confirmPassword}\r\n                  onChange={(e: any) => {\r\n                    formik.setFieldValue(\"confirmPassword\", e.target.value);\r\n                  }}\r\n                />\r\n                <i className=\"inputIcons\">\r\n                  <RiLockPasswordLine />\r\n                </i>\r\n              </div>\r\n              {formik.touched.confirmPassword &&\r\n              formik.errors.confirmPassword ? (\r\n                <div className=\"error\">{formik.errors.confirmPassword}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs\">\r\n                <InputField\r\n                  name=\"phone\"\r\n                  className=\"formInputs_inner\"\r\n                  placeholder=\"Phone #\"\r\n                  type=\"text\"\r\n                  value={formik.values.phone}\r\n                  onChange={(e: any) => {\r\n                    formik.setFieldValue(\"phone\", e.target.value);\r\n                  }}\r\n                />\r\n                <i className=\"inputIcons\">\r\n                  <BsTelephone />\r\n                </i>\r\n              </div>\r\n              {formik.touched.phone && formik.errors.phone ? (\r\n                <div className=\"error\">{formik.errors.phone}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs \">\r\n                <InputField\r\n                  name=\"city\"\r\n                  className=\"formInputs_inner\"\r\n                  placeholder=\"City\"\r\n                  type=\"text\"\r\n                  value={formik.values.city}\r\n                  onChange={(e: any) => {\r\n                    formik.setFieldValue(\"city\", e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <i className=\"inputIcons\">\r\n                  <GiModernCity />\r\n                </i>\r\n              </div>\r\n              {formik.touched.city && formik.errors.city ? (\r\n                <div className=\"error\">{formik.errors.city}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs\">\r\n                <InputField\r\n                  name=\"country\"\r\n                  className=\"formInputs_inner\"\r\n                  placeholder=\"Country\"\r\n                  type=\"text\"\r\n                  value={formik.values.country}\r\n                  onChange={(e: any) => {\r\n                    formik.setFieldValue(\"country\", e.target.value);\r\n                  }}\r\n                />\r\n                <i className=\"inputIcons\">\r\n                  <MdDownhillSkiing />\r\n                </i>\r\n              </div>\r\n              {formik.touched.country && formik.errors.country ? (\r\n                <div className=\"error\">{formik.errors.country}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs\">\r\n                <InputField\r\n                  name=\"address\"\r\n                  className=\"formInputs_inner\"\r\n                  placeholder=\"Address\"\r\n                  type=\"text\"\r\n                  value={formik.values.address}\r\n                  onChange={(e: any) => {\r\n                    formik.setFieldValue(\"address\", e.target.value);\r\n                  }}\r\n                />\r\n                <i className=\"inputIcons\">\r\n                  <FaRegAddressCard />\r\n                </i>\r\n              </div>\r\n              {formik.touched.address && formik.errors.address ? (\r\n                <div className=\"error\">{formik.errors.address}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs \">\r\n                <ReactSelect\r\n                  name=\"desigination\"\r\n                  className=\"react-select formInputs_inner Select\"\r\n                  classNamePrefix=\"react-select\"\r\n                  options={desiginations && desiginations}\r\n                  isSearchable={false}\r\n                  placeholder={\r\n                    <div className=\"select-placeholder-text\">Desigination</div>\r\n                  }\r\n                  value={formik.values.desigination}\r\n                  onChange={(desigination) =>\r\n                    formik.setFieldValue(\"desigination\", desigination)\r\n                  }\r\n                />\r\n                <i className=\"inputIcons\">\r\n                  <FaRegUser />\r\n                </i>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs\">\r\n                <ReactSelect\r\n                  isSearchable={false}\r\n                  name=\"department\"\r\n                  className=\"react-select formInputs_inner Select\"\r\n                  classNamePrefix=\"react-select\"\r\n                  options={departments && departments}\r\n                  placeholder={\r\n                    <div className=\"select-placeholder-text\">Department</div>\r\n                  }\r\n                  value={formik.values.department}\r\n                  onChange={(department) =>\r\n                    formik.setFieldValue(\"department\", department)\r\n                  }\r\n                />\r\n                <i className=\"inputIcons\">\r\n                  <MdOutlineStoreMallDirectory />\r\n                </i>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"inner mb-3 formInputs\">\r\n                <InputField\r\n                  name=\"date\"\r\n                  className=\"formInputs_inner formInputs_inner_date\"\r\n                  placeholder=\"D.O.B\"\r\n                  type=\"date\"\r\n                  max={moment(Date.now()).format(\"YYYY-MM-DD\")}\r\n                  value={formik.values.date}\r\n                  onChange={(e: any) => {\r\n                    console.log(\"e.target.value\", e.target.value);\r\n                    formik.setFieldValue(\"date\", e.target.value);\r\n                  }}\r\n                />\r\n                <i className=\"inputIcons\">\r\n                  <MdOutlineDateRange />\r\n                </i>\r\n              </div>\r\n              {formik.touched.date && formik.errors.date ? (\r\n                <div className=\"error\">{formik.errors.date}</div>\r\n              ) : null}\r\n            </div>\r\n         \r\n      \r\n          \r\n           \r\n         \r\n\r\n            <div className=\"col-8 offset-2\" style={{marginBottom:'50px'}}>\r\n              <div className=\"inner\" >\r\n                <Button type=\"submit\" children=\"Add user\" className=\"color\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default AddUser;\r\n"],"sourceRoot":""}